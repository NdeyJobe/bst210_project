---
title: "Negative-Binomial"
format: html
---

```{r}
install.packages("janitor")
library(tidyverse)
```

```{r}
world_data <- read_csv("global_data/data.csv")

# Create a new column named "Region" in the dataset
world_data$Region <- NA
#colnames(world_data)

# List of East Asia and Pacific countries
east_asia_pacific_countries <- c("AMERICAN SAMOA", "AUSTRALIA", 
                                 "BRUNEI DARUSSALAM", "CAMBODIA", 
                                 "CHINA", "FIJI", "FRENCH POLYNESIA", 
                                 "GUAM", "HONG KONG SAR, CHINA", 
                                 "INDONESIA", "JAPAN", "KIRIBATI", 
                                 "KOREA, DEM. PEOPLE'S REP.", 
                                 "KOREA, REP.", "LAO PDR", 
                                 "MACAO SAR, CHINA", "MALAYSIA",
                                 "MARSHALL ISLANDS", "MICRONESIA, 
                                 FED. STS.", "MONGOLIA", "MYANMAR", 
                                 "NAURU", "NEW CALEDONIA", "NEW ZEALAND", 
                                 "NORTHERN MARIANA ISLANDS", "PALAU", 
                                 "PAPUA NEW GUINEA", "PHILIPPINES", 
                                 "SAMOA", "SINGAPORE", "SOLOMON ISLANDS", 
                                 "THAILAND", "TIMOR-LESTE", "TONGA", "TUVALU", 
                                 "VANUATU", "VIET NAM")
# Assign the "East Asia and Pacific" region to the specified countries
world_data$Region[world_data$Country %in% east_asia_pacific_countries] <- 
  "East Asia and Pacific"

# List of Europe and Central Asia countries
europe_central_asia_countries <- c("ALBANIA", "ANDORRA", 
                                   "ARMENIA", "AUSTRIA", 
                                   "AZERBAIJAN", "BELARUS", 
                                   "BELGIUM", "BOSNIA AND HERZEGOVINA", 
                                   "BULGARIA", "CHANNEL ISLANDS", 
                                   "CROATIA", "CYPRUS", "CZECHIA", 
                                   "DENMARK", "ESTONIA", "FAROE ISLANDS", 
                                   "FINLAND", "FRANCE", "GEORGIA", 
                                   "GERMANY", "GIBRALTAR", "GREECE", 
                                   "GREENLAND", "HUNGARY", "ICELAND", 
                                   "IRELAND", "ISLE OF MAN", "ITALY", 
                                   "KAZAKHSTAN", "KOSOVO", 
                                   "KYRGYZ REPUBLIC", "LATVIA", 
                                   "LIECHTENSTEIN", "LITHUANIA", 
                                   "LUXEMBOURG", "MOLDOVA", 
                                   "MONACO", "MONTENEGRO", 
                                   "NETHERLANDS", "NORTH MACEDONIA", 
                                   "NORWAY", "POLAND", "PORTUGAL", 
                                   "ROMANIA", "RUSSIAN FEDERATION", 
                                   "SAN MARINO", "SERBIA", "SLOVAK REPUBLIC", 
                                   "SLOVENIA", "SPAIN", "SWEDEN", 
                                   "SWITZERLAND", "TAJIKISTAN", "TURKIYE", 
                                   "TURKMENISTAN", "UKRAINE", 
                                   "UNITED KINGDOM", "UZBEKISTAN")
# Assign the "Europe and Central Asia" region to the specified countries
world_data$Region[world_data$Country %in% europe_central_asia_countries] <- 
  "Europe and Central Asia"


# List of Latin America and Caribbean countries
latin_america_caribbean_countries <- c(
  "ANTIGUA AND BARBUDA", "ARGENTINA", "ARUBA", 
  "BAHAMAS, THE", "BARBADOS", "BELIZE", "BOLIVIA", 
  "BRAZIL", "BRITISH VIRGIN ISLANDS",
  "CAYMAN ISLANDS", "CHILE", "COLOMBIA", "COSTA RICA",
  "CUBA", "CURACAO", "DOMINICA", "DOMINICAN REPUBLIC", 
  "ECUADOR", "EL SALVADOR",
  "GRENADA", "GUATEMALA", "GUYANA", "HAITI", "HONDURAS", 
  "JAMAICA", "MEXICO", "NICARAGUA", "PANAMA", "PARAGUAY", 
  "PERU", "PUERTO RICO",
  "SINT MAARTEN (DUTCH PART)", "ST. KITTS AND NEVIS", 
  "ST. LUCIA", "ST. MARTIN (FRENCH PART)", 
  "ST. VINCENT AND THE GRENADINES",
  "SURINAME", "TRINIDAD AND TOBAGO", 
  "TURKS AND CAICOS ISLANDS", "URUGUAY", 
  "VENEZUELA, RB", "VIRGIN ISLANDS (U.S.)"
)
# Assign the "Latin America and Caribbean" region to the specified countries
world_data$Region[world_data$Country %in% latin_america_caribbean_countries] <- 
  "Latin America and Caribbean"


# List of Middle East and North Africa countries
middle_east_north_africa_countries <- c(
  "ALGERIA", "BAHRAIN", "DJIBOUTI", "EGYPT, ARAB REP.", 
  "IRAN, ISLAMIC REP.", "IRAQ", "ISRAEL", "JORDAN", 
  "KUWAIT", "LEBANON",
  "LIBYA", "MALTA", "MOROCCO", "OMAN", "QATAR", 
  "SAUDI ARABIA", "SYRIAN ARAB REPUBLIC", "TUNISIA", 
  "UNITED ARAB EMIRATES",
  "WEST BANK AND GAZA", "YEMEN, REP."
)
# Assign the "Middle East and North Africa" region to the specified countries
world_data$Region[world_data$Country %in% middle_east_north_africa_countries] <- 
  "Middle East and North Africa"

# List of North American countries
north_american_countries <- c("BERMUDA", "CANADA", "UNITED STATES")
# Assign the "North America" region to the specified countries
world_data$Region[world_data$Country %in% north_american_countries] <- 
  "North America"


# List of South Asian countries
south_asian_countries <- c("AFGHANISTAN", "BANGLADESH", "BHUTAN", 
                           "INDIA", "MALDIVES", "NEPAL", "PAKISTAN", "SRI LANKA")
# Assign the "South Asia" region to the specified countries
world_data$Region[world_data$Country %in% south_asian_countries] <- 
  "South Asia"



sub_saharan_africa_countries <- c(
  "ANGOLA", "BENIN", "BOTSWANA", "BURKINA FASO", "BURUNDI", 
  "CABO VERDE", "CAMEROON", "CENTRAL AFRICAN REPUBLIC",
  "CHAD", "COMOROS", "CONGO, DEM. REP.", "CONGO, REP.", 
  "COTE D'IVOIRE", "EQUATORIAL GUINEA", "ERITREA", "ESWATINI",
  "ETHIOPIA", "GABON", "GAMBIA, THE", "GHANA", "GUINEA", 
  "GUINEA-BISSAU", "KENYA", "LESOTHO", "LIBERIA", "MADAGASCAR",
  "MALAWI", "MALI", "MAURITANIA", "MAURITIUS", "MOZAMBIQUE", 
  "NAMIBIA", "NIGER", "NIGERIA", "RWANDA", "SAO TOME AND PRINCIPE",
  "SENEGAL", "SEYCHELLES", "SIERRA LEONE", "SOMALIA", "SOUTH AFRICA", 
  "SOUTH SUDAN", "SUDAN", "TANZANIA", "TOGO", "UGANDA",
  "ZAMBIA", "ZIMBABWE"
)
# Assign the "Sub-Saharan Africa" region to the specified countries
world_data$Region[world_data$Country %in% sub_saharan_africa_countries] <- 
  "Sub-Saharan Africa"














colnames(data_low)

# Use clean_names() to tidy up column names
data_low <- janitor::clean_names(data_low)

# # Use the rename function to rename columns
# data_low <- data_low %>%
#   rename(year = time, co2_emissions_metric_tons_per_capita = co2_emissions_metric_tons_per_capita_en_atm_co2e_pc, gdp_per_capita = gdp_per_capita_current_us_ny_gdp_pcap_cd,
# pm2_5_air_pollution = pm2_5_air_pollution_mean_annual_exposure_micrograms_per_cubic_meter_en_atm_pm25_mc_m3,
# mortality_rate_infant = mortality_rate_infant_per_1_000_live_births_sp_dyn_imrt_in, mortality_rate_neonatal = mortality_rate_neonatal_per_1_000_live_births_sh_dyn_nmrt, mortality_rate_under_5 = mortality_rate_under_5_per_1_000_live_births_sh_dyn_mort,
# health_expenditure_percent_of_gdp = current_health_expenditure_percent_of_gdp_sh_xpd_chex_gd_zs, health_expenditure_per_capita = current_health_expenditure_per_capita_current_us_sh_xpd_chex_pc_cd, physicians = physicians_per_1_000_people_sh_med_phys_zs, community_health_workers = community_health_workers_per_1_000_people_sh_med_cmhw_p3,
# gdp = gdp_current_us_ny_gdp_mktp_cd, population = population_total_sp_pop_totl)


# Display the updated column names
print(colnames(data_low))

# Select variables
data_low <- data_low %>%
  filter(year %in% 2010:2019) #%>%
  select(-c(community_health_workers, physicians, health_expenditure_per_capita, time_code, gdp))
  
# Change data type
tmp <- data_low %>%
  select(-country_name, -country_code) %>%
  mutate(across(everything(), as.numeric))
View(tmp)

# Missing data: Drop rows with missing values and print the country names
# Identify rows with missing values
low_income <- rownames(tmp[!complete.cases(tmp), ])

# Print the row names of rows with missing values
cat("Row names with missing values:", rows_with_missing, "\n")

# Drop rows with missing values
your_data_frame_complete <- your_data_frame[complete.cases(your_data_frame), ]

# Display the data frame with complete cases
print(your_data_frame_complete)

```

```{r}

  
```

